basePath: /
definitions:
  handlers.LoginRequest:
    description: Login request payload
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.RegisterRequest:
    description: Registration request payload
    properties:
      email:
        type: string
      password:
        minLength: 3
        type: string
    required:
    - email
    - password
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: integer
          tier:
            type: string
        type: object
    type: object
  models.LogoutResponse:
    properties:
      message:
        type: string
    type: object
  models.ProfileResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      tier:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      tier:
        type: string
    type: object
  models.TierUpgradeResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      tier:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a wallet backend server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wallet Backend API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Login a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login a new user
      tags:
      - auth
  /api/logout:
    post:
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LogoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
  /api/profile:
    get:
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
  /api/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/tiers/upgrade:
    post:
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TierUpgradeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
